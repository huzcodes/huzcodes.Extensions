<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <Title>huzcodes.Extensions</Title>
    <Authors>Ahmed Hussain (huzcodes)</Authors>
    <Company>huzcodes</Company>
    <Description>huzcodes.Extensions is a C# .NET 8 package that provides a global exception handler to enhance error handling in your applications. It offers two main classes, ResultException and CustomResultException, for managing exceptions and errors in a unified manner. ResultException allows you to throw exceptions with a specified error message and status code, while CustomResultException is designed for structured responses in case of failures.

Additionally, the package includes fluent validation support, enabling you to handle validation errors seamlessly. By centralizing error management, huzcodes.Extensions simplifies error handling across different layers of your application.

huzcodes.Extensions now includes an identity extension for token generation and authorization using JWT tokens or access keys and it supports authorization for both together as well at the same time. This allows client applications, including mobile or websites, to access APIs using JWT tokens. Additionally, APIs can access other APIs using an access key
</Description>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageIcon>huzcodes-extensions-logo.png</PackageIcon>
    <IncludeSymbols>False</IncludeSymbols>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <RepositoryUrl>https://github.com/huzcodes/huzcodes.Extensions</RepositoryUrl>
    <PackageTags>Exception, Exception Handler, Error, error management, Identity Management, Authorization, JWT Token, API Access Key</PackageTags>
    <PackageProjectUrl>https://github.com/huzcodes/huzcodes.Extensions</PackageProjectUrl>
    <Copyright>huzcodes</Copyright>
    <PackageReleaseNotes>huzcodes.Extensions now includes an identity extension for token generation and authorization using JWT tokens or access keys and it supports authorization for both together as well at the same time. This allows client applications, including mobile or websites, to access APIs using JWT tokens. Additionally, APIs can access other APIs using an access key.
</PackageReleaseNotes>
    <Version>1.3.0</Version>
  </PropertyGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\PluginDocs\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\PluginDocs\huzcodes-extensions-logo.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="FluentValidation" Version="11.9.0" />
    <PackageReference Include="FluentValidation.DependencyInjectionExtensions" Version="11.9.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.6" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="7.6.1" />
  </ItemGroup>

</Project>
